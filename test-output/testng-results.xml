<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="2" total="6" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="20755" started-at="2020-05-11T18:31:31 IST" finished-at="2020-05-11T18:31:52 IST">
    <groups>
    </groups>
    <test name="Test" duration-ms="20755" started-at="2020-05-11T18:31:31 IST" finished-at="2020-05-11T18:31:52 IST">
      <class name="com.qa.testcases.PageClass1Test">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:com.qa.testcases.PageClass1Test@71bbf57e]" name="beforeSuite" is-config="true" duration-ms="113" started-at="2020-05-11T18:31:31 IST" finished-at="2020-05-11T18:31:31 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="setup()[pri:0, instance:com.qa.testcases.PageClass1Test@71bbf57e]" name="setup" is-config="true" duration-ms="9702" started-at="2020-05-11T18:31:31 IST" finished-at="2020-05-11T18:31:41 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.testcases.PageClass1Test@71bbf57e]" name="beforeMethod" is-config="true" duration-ms="5" started-at="2020-05-11T18:31:41 IST" finished-at="2020-05-11T18:31:41 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.testcases.PageClass1Test.selectDropDown() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="selectDropDown()[pri:0, instance:com.qa.testcases.PageClass1Test@71bbf57e]" name="selectDropDown" duration-ms="701" started-at="2020-05-11T18:31:41 IST" finished-at="2020-05-11T18:31:41 IST">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[did not expect to find [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: did not expect to find [true] but found [false]
at org.testng.Assert.fail(Assert.java:97)
at org.testng.Assert.failNotEquals(Assert.java:969)
at org.testng.Assert.assertTrue(Assert.java:43)
at org.testng.Assert.assertTrue(Assert.java:53)
at com.qa.testcases.PageClass1Test.selectDropDown(PageClass1Test.java:24)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectDropDown -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qa.testcases.PageClass1Test@71bbf57e]" name="afterMethod" is-config="true" duration-ms="6" started-at="2020-05-11T18:31:42 IST" finished-at="2020-05-11T18:31:42 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=selectDropDown status=FAILURE method=PageClass1Test.selectDropDown()[pri:0, instance:com.qa.testcases.PageClass1Test@71bbf57e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.qa.testcases.PageClass1Test@71bbf57e]" name="tearDown" is-config="true" duration-ms="608" started-at="2020-05-11T18:31:42 IST" finished-at="2020-05-11T18:31:42 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:com.qa.testcases.PageClass1Test@71bbf57e]" name="afterSuite" is-config="true" duration-ms="200" started-at="2020-05-11T18:31:52 IST" finished-at="2020-05-11T18:31:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.qa.testcases.PageClass1Test -->
      <class name="com.qa.testcases.TestClass2">
        <test-method status="PASS" signature="setup()[pri:0, instance:com.qa.testcases.TestClass2@7f13d6e]" name="setup" is-config="true" duration-ms="8550" started-at="2020-05-11T18:31:42 IST" finished-at="2020-05-11T18:31:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.testcases.TestClass2@7f13d6e]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-05-11T18:31:51 IST" finished-at="2020-05-11T18:31:51 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.testcases.TestClass2.check()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="check()[pri:0, instance:com.qa.testcases.TestClass2@7f13d6e]" name="check" duration-ms="1" started-at="2020-05-11T18:31:51 IST" finished-at="2020-05-11T18:31:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- check -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qa.testcases.TestClass2@7f13d6e]" name="afterMethod" is-config="true" duration-ms="1" started-at="2020-05-11T18:31:51 IST" finished-at="2020-05-11T18:31:51 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=check status=SUCCESS method=TestClass2.check()[pri:0, instance:com.qa.testcases.TestClass2@7f13d6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.testcases.TestClass2@7f13d6e]" name="beforeMethod" is-config="true" duration-ms="1" started-at="2020-05-11T18:31:51 IST" finished-at="2020-05-11T18:31:51 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.testcases.TestClass2.check1()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="check1()[pri:0, instance:com.qa.testcases.TestClass2@7f13d6e]" name="check1" duration-ms="1" started-at="2020-05-11T18:31:51 IST" finished-at="2020-05-11T18:31:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- check1 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qa.testcases.TestClass2@7f13d6e]" name="afterMethod" is-config="true" duration-ms="1" started-at="2020-05-11T18:31:51 IST" finished-at="2020-05-11T18:31:51 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=check1 status=SUCCESS method=TestClass2.check1()[pri:0, instance:com.qa.testcases.TestClass2@7f13d6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.testcases.TestClass2@7f13d6e]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2020-05-11T18:31:51 IST" finished-at="2020-05-11T18:31:51 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.testcases.TestClass2.check2()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="check2()[pri:0, instance:com.qa.testcases.TestClass2@7f13d6e]" name="check2" duration-ms="1" started-at="2020-05-11T18:31:51 IST" finished-at="2020-05-11T18:31:51 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- check2 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qa.testcases.TestClass2@7f13d6e]" name="afterMethod" is-config="true" duration-ms="1" started-at="2020-05-11T18:31:51 IST" finished-at="2020-05-11T18:31:51 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=check2 status=SUCCESS method=TestClass2.check2()[pri:0, instance:com.qa.testcases.TestClass2@7f13d6e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:com.qa.testcases.TestClass2@7f13d6e]" name="tearDown" is-config="true" duration-ms="750" started-at="2020-05-11T18:31:51 IST" finished-at="2020-05-11T18:31:52 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.qa.testcases.TestClass2 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
